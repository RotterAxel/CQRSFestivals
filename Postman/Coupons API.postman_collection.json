{
	"info": {
		"_postman_id": "8777d6a8-22b1-4308-b7e1-a14c5abadb9b",
		"name": "Coupons API",
		"description": "An Endpoint to get and set all necessary information for the Coupons screen",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "authorization",
					"item": [
						{
							"name": "PostmanClient App Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b1fc2505-38dc-4ebb-82b4-a70de31194fb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "089d7beb-183d-4876-aa7e-2a2013c77156",
										"exec": [
											"var jsonResponse = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"apptoken\", jsonResponse.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "client.app",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "hansecoreapi",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "NotASecret",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{idp-base-url}}/connect/token",
									"host": [
										"{{idp-base-url}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/WeatherForecast",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"WeatherForecast"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n },\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "Staging AndroidClient App Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "edfc8ee2-251a-4968-b8a1-618ee9891d57",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a3363549-aef2-4020-8d86-2aeaa4808fdd",
										"exec": [
											"var jsonResponse = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"androidtoken\", jsonResponse.access_token);\r",
											"pm.collectionVariables.set(\"apptoken\", jsonResponse.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{android-clientid}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "hansecoreapi",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{android-secret}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{idp-base-url}}/connect/token",
									"host": [
										"{{idp-base-url}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/WeatherForecast",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"WeatherForecast"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n },\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "Staging iOSClient App Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c90c3892-8a86-4b1f-a43a-80a4b7df2a1a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "50a87a67-84b5-4127-a00f-73d62f90f23b",
										"exec": [
											"var jsonResponse = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"iOStoken\", jsonResponse.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{ios-clientid}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "hansecoreapi",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{ios-secret}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{idp-base-url}}/connect/token",
									"host": [
										"{{idp-base-url}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/WeatherForecast",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"WeatherForecast"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n },\n {\n  \"date\": \"<dateTime>\",\n  \"temperatureC\": \"<integer>\",\n  \"temperatureF\": \"<integer>\",\n  \"summary\": \"<string>\"\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "coupons",
					"item": [
						{
							"name": "Get Coupon",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/coupons/:couponId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										":couponId"
									],
									"variable": [
										{
											"key": "couponId",
											"value": "1",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/coupons/:couponId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												":couponId"
											],
											"variable": [
												{
													"key": "couponId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Coupon (Coupon Not Exists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd678767-f4ae-4f60-b993-5265a0fc502e",
										"exec": [
											"pm.test('Should return Not Found 404', function () {\r",
											"    pm.expect(pm.response.code).to.be.equal(404);\r",
											"    pm.expect(pm.response.status).to.be.equal('Not Found');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/coupons/:couponId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										":couponId"
									],
									"variable": [
										{
											"key": "couponId",
											"value": "1000",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/coupons/:couponId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												":couponId"
											],
											"variable": [
												{
													"key": "couponId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "RedeemCoupon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.hansefit.redeemcoupon+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productId\": \"1\",\n    \"casUserId\": \"Testxxxxxx1\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/coupons/redeemcode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										"redeemcode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productId\": \"<integer>\",\n    \"casUserId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/coupons/redeemcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												"redeemcode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "RedeemCoupon (Should fail invalid CasId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc739d0e-1176-4ee0-9538-e00773f44459",
										"exec": [
											"pm.test(\"Status code is 422 Unprocessable Entity\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"pm.test(\"Has error exactStringLength\", function () {\r",
											"    pm.expect(pm.response.json().errors.redeemCoupon[0]).to.have.string(\"exactStringLength|The string must contain exactly 11 characters\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.hansefit.redeemcoupon+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productId\": \"2\",\n    \"casUserId\": \"Testxxx\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/coupons/redeemcode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										"redeemcode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productId\": \"<integer>\",\n    \"casUserId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/coupons/redeemcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												"redeemcode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "RedeemCoupon (Wrong Content Type)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "171b8c52-6f26-4e2b-82e5-44271cc5a617",
										"exec": [
											"pm.test('Should return Unsupported Media Type 415', function () {\r",
											"    pm.expect(pm.response.code).to.be.equal(415);\r",
											"    pm.expect(pm.response.status).to.be.equal('Unsupported Media Type');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productId\": \"1\",\n    \"casUserId\": \"Testxxxxxx1\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/coupons/redeemcode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										"redeemcode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productId\": \"<integer>\",\n    \"casUserId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/coupons/redeemcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												"redeemcode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "RedeemCoupon (Should fail user alread has valid coupon)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f763b12-808e-4f48-81c8-98d4cf3597b9",
										"exec": [
											"pm.test(\"Status code is 400 Bad Request\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(pm.response.status).to.be.equal('Bad Request');\r",
											"});\r",
											"\r",
											"var casUserIdFromBody = JSON.parse(pm.request.body.raw).casUserId;\r",
											"\r",
											"pm.test(\"Response to be error message: User has valid coupon\", function() {\r",
											"    pm.response.to.have.body(`\"User with id ${casUserIdFromBody} already has a valid coupon. Either the coupon has not yet expired or the coupon is valid forever.\"`);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.hansefit.redeemcoupon+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"productId\": \"1\",\n    \"casUserId\": \"Testxxxxxx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/coupons/redeemcode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"coupons",
										"redeemcode"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"productId\": \"<integer>\",\n    \"casUserId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/coupons/redeemcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"coupons",
												"redeemcode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "products",
					"item": [
						{
							"name": "Get Product Icon",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "08042d75-d28e-450b-8ca3-8403243fd546",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3b5c3637-35ad-4ba1-8742-0cdb88d42401",
										"exec": [
											"pm.test(\"Response time must be below 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"image\", pm.response.json().data)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId/icon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId",
										"icon"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1",
											"type": "string",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/:productId/icon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":productId",
												"icon"
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get ProductsWithValidCoupons",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1abf3612-a7b3-4ec0-8bcb-5a07167ad502",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "83bfdfc7-9ab9-45fe-a389-83803b74e4c1",
										"exec": [
											"pm.test(\"Response time must be below 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/products/:casUserId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":casUserId"
									],
									"variable": [
										{
											"description": "(Required) ",
											"key": "casUserId",
											"type": "string",
											"value": "Testxxxxxx1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/:casUserId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":casUserId"
											],
											"variable": [
												{
													"key": "casUserId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get ProductsWithValidCoupons (Should return products without coupons because user not exists))",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d0e6f5bd-39b5-4ac6-8f43-8bf7e9e6b4e5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "268942f8-6738-4c3e-8f07-7d7aa61372a3",
										"exec": [
											"pm.test(\"Response time must be below 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"CouponCodeDto empty because user does not exist\", function () {\r",
											"    pm.expect(pm.response.json()[0].couponCodeDto).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{apptoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/products/:casUserId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":casUserId"
									],
									"variable": [
										{
											"description": "(Required) ",
											"key": "casUserId",
											"type": "string",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/:casUserId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":casUserId"
											],
											"variable": [
												{
													"key": "casUserId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "/WeatherForecast",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/WeatherForecast",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"WeatherForecast"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/WeatherForecast",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"WeatherForecast"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"date\": \"voluptate enim culpa\",\n  \"temperatureC\": -90102888,\n  \"temperatureF\": 33554880,\n  \"summary\": \"cupidatat ullamco cillum aute\"\n },\n {\n  \"date\": \"ut adipisicing\",\n  \"temperatureC\": -93504561,\n  \"temperatureF\": 93366289,\n  \"summary\": \"veniam voluptate sed culpa consequat\"\n }\n]"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "29a4076e-bc28-4380-b17b-62e1cdff497f",
				"type": "text/javascript",
				"exec": [
					"// var baseurl = pm.environment.get(\"baseurl\");",
					"",
					"// if(baseurl != null) {",
					"//     pm.variables.set(\"baseurl\", baseurl);",
					"// }",
					"// else {",
					"//     pm.variables.set(\"baseurl\", \"https:\\\\localhost:5001\")",
					"// }",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "55829f71-4bc4-4b96-a815-b8c0d9b4d2d9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "fbafdde3-901b-4c9c-bf74-b790f34df2d5",
			"key": "apptoken",
			"value": ""
		},
		{
			"id": "48e8444c-641a-4e72-aaa2-601148528a81",
			"key": "image",
			"value": ""
		},
		{
			"id": "0eff06d1-869c-47d9-ac32-ea17e29f708e",
			"key": "androidtoken",
			"value": ""
		},
		{
			"id": "e439ba7e-0e4c-4149-a480-06ddd047cf4c",
			"key": "iOStoken",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}